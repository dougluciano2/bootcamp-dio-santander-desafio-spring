# Nome do workflow
name: CI/CD - Build and Deploy to Google Cloud Run

# Gatilho: Executar sempre que houver um push na branch 'main'
on:
  push:
    branches: [ "main" ]

# Permissões que o workflow precisa para se autenticar no Google Cloud
permissions:
  contents: 'read'
  id-token: 'write'

jobs:
  deploy:
    name: Build and Deploy to Cloud Run
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          workload_identity_provider: ${{ secrets.GCP_WIF_PROVIDER }}
          service_account: ${{ secrets.GCP_SA_EMAIL }}

      - name: Build and Deploy to Cloud Run
        id: deploy
        uses: 'google-github-actions/deploy-cloudrun@v2'
        with:
          # O caminho da sua imagem no Artifact Registry
          image: us-central1-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/desafio-spring-repo/desafio-spring-api

          # Nome do seu serviço no Cloud Run
          service: 'desafio-spring-api'
          region: 'us-central1'

          # --- A SEÇÃO QUE FALTAVA ---
          # Adiciona a configuração para conectar ao Cloud SQL e permitir acesso público.
          flags: >-
            --add-cloudsql-instances=${{ secrets.GCP_INSTANCE_CONNECTION_NAME }}
            --allow-unauthenticated

          # Passa as variáveis de ambiente para a aplicação
          env_vars: |
            SPRING_DATASOURCE_URL=${{ secrets.DB_URL_PROD }}
            SPRING_DATASOURCE_USERNAME=${{ secrets.DB_USERNAME_PROD }}
            SPRING_DATASOURCE_PASSWORD=${{ secrets.DB_PASSWORD_PROD }}
            API_SECURITY_TOKEN_SECRET=${{ secrets.API_SECURITY_TOKEN_SECRET }}